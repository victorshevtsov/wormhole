# syntax=docker.io/docker/dockerfile:experimental@sha256:de85b2f3a3e8a2f7fe48e8e84a65f6fdd5cd5183afa6412fff9caa6871649c44
FROM docker.io/library/rust:1.49@sha256:a50165ea96983c21832578afb1c8c028674c965bc1ed43b607871b1f362e06a5 AS build

RUN apt-get update && apt-get install -y libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang
RUN rustup component add rustfmt
RUN rustup default nightly-2021-08-01
RUN cargo install wasm-pack --vers 0.9.1

# Add Safecoin sources
COPY ./Safecoin /usr/src/Safecoin
COPY ./safecoin-program-library /usr/src/safecoin-program-library

# Add Wormhole Safecoin programs sources
COPY ./wormhole/safecoin /usr/src/wormhole/safecoin

ENV RUST_LOG="solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=trace,solana_bpf_loader=debug,solana_rbpf=debug"
ENV EMITTER_ADDRESS="11111111111111111111111111111115"
ENV BRIDGE_ADDRESS="CB369Srn5zYuV1HKQg7WgxxjhcAy1aLH9UYth9jGTXJj"

WORKDIR /usr/src/wormhole/safecoin

# Compile Wormhole
RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_bridge,target=/usr/src/wormhole/safecoin/bridge/program/target \
    cd bridge/program && wasm-pack build --target bundler -d bundler -- --features wasm

RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_bridge,target=/usr/src/wormhole/safecoin/bridge/program/target \
    cd bridge/program && wasm-pack build --target nodejs -d nodejs -- --features wasm

# Compile Token Bridge
RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_token_bridge,target=/usr/src/wormhole/safecoin/modules/token_bridge/program/target \
    cd modules/token_bridge/program && wasm-pack build --target bundler -d bundler -- --features wasm

RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_token_bridge,target=/usr/src/wormhole/safecoin/modules/token_bridge/program/target \
    cd modules/token_bridge/program && wasm-pack build --target nodejs -d nodejs -- --features wasm

# Compile Migration
RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_migration,target=/usr/src/wormhole/safecoin/migration/target \
    cd migration && wasm-pack build --target bundler -d bundler -- --features wasm

RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_migration,target=/usr/src/wormhole/safecoin/migration/target \
    cd migration && wasm-pack build --target nodejs -d nodejs -- --features wasm

# Compile NFT Bridge
RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_nft_bridge,target=/usr/src/wormhole/safecoin/modules/nft_bridge/target \
    cd modules/nft_bridge/program && wasm-pack build --target bundler -d bundler -- --features wasm

RUN --mount=type=cache,id=safecoin_cache,target=/root/.cache \
	--mount=type=cache,id=safecoin_nft_bridge,target=/usr/src/wormhole/safecoin/modules/nft_bridge/target \
    cd modules/nft_bridge/program && wasm-pack build --target nodejs -d nodejs -- --features wasm

FROM scratch AS export

COPY --from=build /usr/src/wormhole/safecoin/bridge/program/bundler sdk/js/src/safecoin/core
COPY --from=build /usr/src/wormhole/safecoin/modules/token_bridge/program/bundler sdk/js/src/safecoin/token
COPY --from=build /usr/src/wormhole/safecoin/migration/bundler sdk/js/src/safecoin/migration
COPY --from=build /usr/src/wormhole/safecoin/modules/nft_bridge/program/bundler sdk/js/src/safecoin/nft

COPY --from=build /usr/src/wormhole/safecoin/bridge/program/nodejs sdk/js/src/safecoin/core-node
COPY --from=build /usr/src/wormhole/safecoin/modules/token_bridge/program/nodejs sdk/js/src/safecoin/token-node
COPY --from=build /usr/src/wormhole/safecoin/migration/nodejs sdk/js/src/safecoin/migration-node
COPY --from=build /usr/src/wormhole/safecoin/modules/nft_bridge/program/nodejs sdk/js/src/safecoin/nft-node

